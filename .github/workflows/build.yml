name: Build & Deploy Macroquad (WASM â†’ GitHub Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust + wasm target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Build (release, wasm32)
        run: cargo build --release --target wasm32-unknown-unknown

      - name: Prepare site (index.html + assets)
        run: |
          set -eux
          mkdir -p dist
          cp target/wasm32-unknown-unknown/release/dark_labyrinth_rs.wasm dist/
          # Minimal macroquad HTML shell using the official loader:
          cat > dist/index.html << 'HTML'
          <!doctype html>
          <html lang="en">
          <meta charset="utf-8"/>
          <meta name="viewport" content="width=device-width, initial-scale=1"/>
          <title>Macroquad WASM</title>
          <style>html,body,canvas{margin:0;height:100%;width:100%;overflow:hidden;background:#000}</style>
          <body>
            <canvas id="glcanvas" tabindex="1"></canvas>
            <!-- Macroquad's loader that sets up all WASM imports -->
            <script src="https://not-fl3.github.io/miniquad-samples/mq_js_bundle.js"></script>
            <script>
              // The .wasm file sits next to this HTML:
              load("./dark_labyrinth_rs.wasm");
            </script>
          </body>
          </html>
          HTML
          # Optional: include your static files
          if [ -d assets ]; then rsync -av --delete assets/ dist/assets/; fi
          if [ -d static ]; then rsync -av --delete static/ dist/; fi
          # Keep GitHub Pages from touching files
          touch dist/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
