name: Build & Deploy (Macroquad to GitHub Pages)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Rust (stable) + wasm target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Build release (wasm)
        run: cargo build --release --target wasm32-unknown-unknown

      - name: Install wasm-bindgen-cli
        run: cargo install wasm-bindgen-cli

      - name: Generate JS bindings (no-modules)
        run: |
          mkdir -p dist
          wasm-bindgen \
            --target no-modules \
            --no-typescript \
            --out-dir dist \
            target/wasm32-unknown-unknown/release/dark_labyrinth_rs.wasm

      - name: Create index.html
        run: |
          cat > dist/index.html << 'HTML'
          <!doctype html>
          <html lang="en">
          <meta charset="utf-8"/>
          <meta name="viewport" content="width=device-width, initial-scale=1"/>
          <title>Macroquad WASM</title>
          <style>html,body{margin:0;height:100%;overflow:hidden;background:#000}</style>
          <body>
            <script src="./dark_labyrinth_rs.js"></script>
            <script>
              // Load & start the WASM. Macroquad will create the canvas itself.
              wasm_bindgen("./dark_labyrinth_rs_bg.wasm").catch(console.error);
            </script>
          </body>
          </html>
          HTML

      - name: Copy static assets (optional)
        run: |
          if [ -d static ]; then rsync -av --delete static/ dist/; fi
          if [ -d assets ]; then mkdir -p dist/assets && rsync -av --delete assets/ dist/assets/; fi

      - name: Disable Jekyll on Pages (serve .wasm correctly)
        run: touch dist/.nojekyll

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
